what pb -> given two string which contain three char is  L,R,_ is start and target. 
         some you can perform operation, any where else L were present and if any spaces(_) is availabel move to the left, and if any R present anywhere and if any space is 
          availabel to directly to its right , then move it to the right , this you can do unlimited time.

goal  is -> can you make after some operation start and tareget string equal .
logic -> this will covered in two steps one is 
                                            1-> first we check after removing both of underscore of starte and target if these string will not eqaul ans will false, because we never
                                               get it 
                                          2->  initialise two i,and j pointer iterate them both till if l not come in start and r not come in target.
                                                then chk in case of L-> if i pointer small than j pointer -> return false;
                                                 and chk in case of R -> if i pointer is greater than j pointer  return false;
                                             rest of them increment pointer,
                                           none of them condition meet return true;


for more solution refer's code->
 class Solution {
public:
    bool canChange(string start, string target) {

        string s1,s2 = "";
        int n = start.size();
        for(char c : start) if(c != '_') s1 += c;
        for(char c  : target) if( c != '_')s2 += c;
        if(s1 != s2)return false;

        int i=0,j=0;
        while( i < n && j < n){

            while(i < n && start[i]=='_')i++;
            while(j < n && target[j] == '_')j++;

            if(i == n || j == n)break;

            if(start[i] == 'L' && i< j)return false;
            if(start[i] == 'R' && i > j) return false;
            i++;
            j++;
        }
        return true;

        
    }
};
